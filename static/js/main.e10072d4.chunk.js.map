{"version":3,"sources":["asserts/img sync /^/.//.*/.jpg$","asserts/img/1.jpg","asserts/img/2.jpg","asserts/img/3.jpg","asserts/img/4.jpg","components/Carousel/Carousel.js","App.js","serviceWorker.js","index.js"],"names":["map","./1.jpg","./2.jpg","./3.jpg","./4.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Carousel","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentIndex","offset","width","_this$props","height","children","length","contentStyle","whiteSpace","overflow","position","renderChildren","bind","assertThisInitialized","setIndex","rightHandler","leftHandler","index","_this2","len","nextIndex","Math","min","delay","setState","currentOffset","nextOffset","start","requestAnimationFrame","move","timestamp","progress","_this$props2","childStyle","appendedChildren","concat","toConsumableArray","React","Children","child","childClone","cloneElement","style","react_default","a","createElement","display","key","imageRowStyle","marginLeft","className","onClick","Component","requireContext","require","img","App","Carousel_Carousel_Carousel","val","idx","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e10072d4.chunk.js","sourcesContent":["var map = {\n\t\"./1.jpg\": 20,\n\t\"./2.jpg\": 21,\n\t\"./3.jpg\": 22,\n\t\"./4.jpg\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/1.3a2c5cc5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.94d6aaee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.07ab7d80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.2abd5f05.jpg\";","import React, { Component } from \"react\";\nimport \"./Carousel.scss\";\n\nexport default class Carousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentIndex: 1,\n      offset: -this.props.width,\n    };\n    const {width,height,children} = this.props\n    this.length = children.length+2\n    this.contentStyle = {\n      width: width,\n      height: height,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      position: 'relative'\n    };\n\n    this.renderChildren = this.renderChildren.bind(this);\n    this.setIndex = this.setIndex.bind(this);\n    this.rightHandler = this.rightHandler.bind(this);\n    this.leftHandler = this.leftHandler.bind(this);\n  }\n  rightHandler(e) {\n    const { currentIndex } = this.state;\n    this.setIndex(currentIndex + 1);\n  }\n  leftHandler() {\n    const { currentIndex } = this.state;\n    this.setIndex(currentIndex - 1);\n  }\n  setIndex(index) {\n    const len = this.props.children.length;\n    let nextIndex = Math.min(len+1,index);\n    const { width } = this.props;\n    const delay = this.props.delay||100\n    this.setState({ currentIndex: nextIndex });\n\n    const currentOffset = this.state.offset;\n    const nextOffset = -nextIndex * width;\n\n    let start = null;\n\n    const move = timestamp => {\n      if (!start) {\n        start = timestamp;\n      }\n      const progress = timestamp - start;\n      this.setState({\n        offset: currentOffset + (nextOffset - currentOffset) * progress / delay\n      });\n\n      if (progress < delay) {\n        requestAnimationFrame(move);\n      } else {\n        if (nextIndex === 0) {\n          nextIndex = len;\n        } else if (nextIndex >= len + 1) {\n          nextIndex = 1;\n        }\n        this.setState({ currentIndex: nextIndex, offset: -nextIndex * width });\n      }\n    };\n    requestAnimationFrame(move);\n  }\n  renderChildren() {\n    const { children, width, height } = this.props;\n    const childStyle = {\n      width: width,\n      height: height\n    };\n    const appendedChildren =[\n      children[children.length-1],\n      ...children,\n      children[0]\n    ]\n    return React.Children.map(appendedChildren, (child,index) => {\n      const childClone = React.cloneElement(child, { style: childStyle });\n      return (\n        <div\n          style={{\n            display: \"inline-block\"\n          }}\n          key={index}\n        >\n          {childClone}\n        </div>\n      );\n    });\n  }\n\n\n  render() {\n    const { offset } = this.state;\n    const imageRowStyle = {\n      marginLeft: offset\n    };\n    return (\n      <div className=\"carousel\">\n        <div className=\"content\" style={this.contentStyle}>\n          <div style={imageRowStyle}> {this.renderChildren()}</div>\n        </div>\n        <button className=\"left\" onClick={this.leftHandler}>\n          {\"<\"}\n        </button>\n        <button className=\"right\" onClick={this.rightHandler}>\n          {\">\"}\n        </button>\n        \n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Carousel from \"./components/Carousel/Carousel\";\nimport \"./App.css\";\n\nconst requireContext = require.context(\"./asserts/img\", true, /^\\.\\/.*\\.jpg$/);\nconst img = requireContext.keys().map(requireContext);\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <p>无限轮播</p>\n        <Carousel width={450} height={300} >\n          {img.map((val, idx) => (\n            <img\n              style={{ display: \"inline-block\" }}\n              src={val}\n              key={val}\n              alt={`图${idx}`}\n            />\n          ))}\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}